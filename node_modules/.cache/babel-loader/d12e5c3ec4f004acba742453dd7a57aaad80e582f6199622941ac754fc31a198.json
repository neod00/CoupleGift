{"ast":null,"code":"// 쿠팡 파트너스 API 클라이언트 클래스\nclass CoupangPartnerService {\n  constructor() {\n    this.accessKey = void 0;\n    this.secretKey = void 0;\n    this.baseUrl = 'https://api-gateway.coupang.com';\n    this.partnerId = void 0;\n    this.accessKey = process.env.REACT_APP_COUPANG_ACCESS_KEY || '';\n    this.secretKey = process.env.REACT_APP_COUPANG_SECRET_KEY || '';\n    this.partnerId = process.env.REACT_APP_COUPANG_PARTNER_ID || '';\n  }\n\n  // HMAC 서명 생성\n  generateSignature(method, path, secretKey, accessKey) {\n    const datetime = new Date().toISOString().replace(/\\.\\d{3}Z$/, 'Z');\n    const message = `${datetime.slice(0, 8)}T${datetime.slice(8)}${method}${path}${accessKey}`;\n\n    // 실제 환경에서는 crypto 라이브러리 사용 필요\n    // 현재는 브라우저 환경이므로 백엔드 API를 통해 처리해야 함\n    return 'signature_placeholder'; // 실제 구현 시 HMAC-SHA256 서명 필요\n  }\n\n  // 제품 검색 API 호출\n  async searchProducts(keyword, limit = 10) {\n    try {\n      const path = `/v2/providers/affiliate_open_api/apis/openapi/products/search`;\n      const params = new URLSearchParams({\n        keyword: keyword,\n        limit: limit.toString(),\n        categoryId: '',\n        // 전체 카테고리\n        sort: 'scoreDesc',\n        // 인기순\n        minPrice: '0',\n        maxPrice: '1000000'\n      });\n      const fullPath = `${path}?${params.toString()}`;\n\n      // 브라우저에서 직접 쿠팡 API 호출은 CORS 문제로 불가능\n      // 실제로는 백엔드 서버를 통해 API 호출해야 함\n\n      // 임시로 더미 데이터 반환 (실제 구현 시 백엔드 API 호출)\n      return this.getDummyProducts(keyword);\n    } catch (error) {\n      console.error('쿠팡 API 호출 오류:', error);\n      throw new Error('쿠팡 제품 검색 중 오류가 발생했습니다.');\n    }\n  }\n\n  // 더미 제품 데이터 생성 (실제 API 연동 전 테스트용)\n  getDummyProducts(keyword) {\n    const products = [{\n      productId: '1',\n      productName: `${keyword} 관련 제품 1`,\n      productPrice: 59000,\n      productImage: `https://via.placeholder.com/300x200?text=${encodeURIComponent(keyword)}1`,\n      productUrl: `https://www.coupang.com/vp/products/1?vendorItemId=1&src=1036296&spec=10304982`,\n      originalPrice: 79000,\n      discountRate: 25,\n      vendorItemId: '1',\n      categoryName: '생활용품',\n      rating: 4.5,\n      ratingCount: 128\n    }, {\n      productId: '2',\n      productName: `${keyword} 관련 제품 2`,\n      productPrice: 89000,\n      productImage: `https://via.placeholder.com/300x200?text=${encodeURIComponent(keyword)}2`,\n      productUrl: `https://www.coupang.com/vp/products/2?vendorItemId=2&src=1036296&spec=10304982`,\n      originalPrice: 109000,\n      discountRate: 18,\n      vendorItemId: '2',\n      categoryName: '패션',\n      rating: 4.2,\n      ratingCount: 89\n    }, {\n      productId: '3',\n      productName: `${keyword} 관련 제품 3`,\n      productPrice: 79000,\n      productImage: `https://via.placeholder.com/300x200?text=${encodeURIComponent(keyword)}3`,\n      productUrl: `https://www.coupang.com/vp/products/3?vendorItemId=3&src=1036296&spec=10304982`,\n      originalPrice: 99000,\n      discountRate: 20,\n      vendorItemId: '3',\n      categoryName: 'IT기기',\n      rating: 4.7,\n      ratingCount: 256\n    }];\n    return {\n      products,\n      totalCount: products.length\n    };\n  }\n\n  // 파트너스 링크 생성\n  generatePartnerLink(productUrl) {\n    if (!this.partnerId) {\n      console.warn('쿠팡 파트너 ID가 설정되지 않았습니다.');\n      return productUrl;\n    }\n    const partnerCode = this.partnerId;\n    const encodedUrl = encodeURIComponent(productUrl);\n    return `https://link.coupang.com/a/${partnerCode}?url=${encodedUrl}`;\n  }\n}\nexport const coupangService = new CoupangPartnerService();","map":{"version":3,"names":["CoupangPartnerService","constructor","accessKey","secretKey","baseUrl","partnerId","process","env","REACT_APP_COUPANG_ACCESS_KEY","REACT_APP_COUPANG_SECRET_KEY","REACT_APP_COUPANG_PARTNER_ID","generateSignature","method","path","datetime","Date","toISOString","replace","message","slice","searchProducts","keyword","limit","params","URLSearchParams","toString","categoryId","sort","minPrice","maxPrice","fullPath","getDummyProducts","error","console","Error","products","productId","productName","productPrice","productImage","encodeURIComponent","productUrl","originalPrice","discountRate","vendorItemId","categoryName","rating","ratingCount","totalCount","length","generatePartnerLink","warn","partnerCode","encodedUrl","coupangService"],"sources":["C:/Users/NT940XHA/OneDrive/Business/ai automation/CoupleGift/src/services/coupangService.ts"],"sourcesContent":["interface CoupangProduct {\r\n  productId: string;\r\n  productName: string;\r\n  productPrice: number;\r\n  productImage: string;\r\n  productUrl: string;\r\n  originalPrice: number;\r\n  discountRate: number;\r\n  vendorItemId: string;\r\n  categoryName: string;\r\n  rating: number;\r\n  ratingCount: number;\r\n}\r\n\r\ninterface CoupangSearchResponse {\r\n  products: CoupangProduct[];\r\n  totalCount: number;\r\n}\r\n\r\n// 쿠팡 파트너스 API 클라이언트 클래스\r\nclass CoupangPartnerService {\r\n  private readonly accessKey: string;\r\n  private readonly secretKey: string;\r\n  private readonly baseUrl = 'https://api-gateway.coupang.com';\r\n  private readonly partnerId: string;\r\n\r\n  constructor() {\r\n    this.accessKey = process.env.REACT_APP_COUPANG_ACCESS_KEY || '';\r\n    this.secretKey = process.env.REACT_APP_COUPANG_SECRET_KEY || '';\r\n    this.partnerId = process.env.REACT_APP_COUPANG_PARTNER_ID || '';\r\n  }\r\n\r\n  // HMAC 서명 생성\r\n  private generateSignature(\r\n    method: string,\r\n    path: string,\r\n    secretKey: string,\r\n    accessKey: string\r\n  ): string {\r\n    const datetime = new Date().toISOString().replace(/\\.\\d{3}Z$/, 'Z');\r\n    const message = `${datetime.slice(0, 8)}T${datetime.slice(8)}${method}${path}${accessKey}`;\r\n    \r\n    // 실제 환경에서는 crypto 라이브러리 사용 필요\r\n    // 현재는 브라우저 환경이므로 백엔드 API를 통해 처리해야 함\r\n    return 'signature_placeholder'; // 실제 구현 시 HMAC-SHA256 서명 필요\r\n  }\r\n\r\n  // 제품 검색 API 호출\r\n  async searchProducts(keyword: string, limit: number = 10): Promise<CoupangSearchResponse> {\r\n    try {\r\n      const path = `/v2/providers/affiliate_open_api/apis/openapi/products/search`;\r\n      const params = new URLSearchParams({\r\n        keyword: keyword,\r\n        limit: limit.toString(),\r\n        categoryId: '', // 전체 카테고리\r\n        sort: 'scoreDesc', // 인기순\r\n        minPrice: '0',\r\n        maxPrice: '1000000'\r\n      });\r\n\r\n      const fullPath = `${path}?${params.toString()}`;\r\n      \r\n      // 브라우저에서 직접 쿠팡 API 호출은 CORS 문제로 불가능\r\n      // 실제로는 백엔드 서버를 통해 API 호출해야 함\r\n      \r\n      // 임시로 더미 데이터 반환 (실제 구현 시 백엔드 API 호출)\r\n      return this.getDummyProducts(keyword);\r\n      \r\n    } catch (error) {\r\n      console.error('쿠팡 API 호출 오류:', error);\r\n      throw new Error('쿠팡 제품 검색 중 오류가 발생했습니다.');\r\n    }\r\n  }\r\n\r\n  // 더미 제품 데이터 생성 (실제 API 연동 전 테스트용)\r\n  private getDummyProducts(keyword: string): CoupangSearchResponse {\r\n    const products: CoupangProduct[] = [\r\n      {\r\n        productId: '1',\r\n        productName: `${keyword} 관련 제품 1`,\r\n        productPrice: 59000,\r\n        productImage: `https://via.placeholder.com/300x200?text=${encodeURIComponent(keyword)}1`,\r\n        productUrl: `https://www.coupang.com/vp/products/1?vendorItemId=1&src=1036296&spec=10304982`,\r\n        originalPrice: 79000,\r\n        discountRate: 25,\r\n        vendorItemId: '1',\r\n        categoryName: '생활용품',\r\n        rating: 4.5,\r\n        ratingCount: 128\r\n      },\r\n      {\r\n        productId: '2',\r\n        productName: `${keyword} 관련 제품 2`,\r\n        productPrice: 89000,\r\n        productImage: `https://via.placeholder.com/300x200?text=${encodeURIComponent(keyword)}2`,\r\n        productUrl: `https://www.coupang.com/vp/products/2?vendorItemId=2&src=1036296&spec=10304982`,\r\n        originalPrice: 109000,\r\n        discountRate: 18,\r\n        vendorItemId: '2',\r\n        categoryName: '패션',\r\n        rating: 4.2,\r\n        ratingCount: 89\r\n      },\r\n      {\r\n        productId: '3',\r\n        productName: `${keyword} 관련 제품 3`,\r\n        productPrice: 79000,\r\n        productImage: `https://via.placeholder.com/300x200?text=${encodeURIComponent(keyword)}3`,\r\n        productUrl: `https://www.coupang.com/vp/products/3?vendorItemId=3&src=1036296&spec=10304982`,\r\n        originalPrice: 99000,\r\n        discountRate: 20,\r\n        vendorItemId: '3',\r\n        categoryName: 'IT기기',\r\n        rating: 4.7,\r\n        ratingCount: 256\r\n      }\r\n    ];\r\n\r\n    return {\r\n      products,\r\n      totalCount: products.length\r\n    };\r\n  }\r\n\r\n  // 파트너스 링크 생성\r\n  generatePartnerLink(productUrl: string): string {\r\n    if (!this.partnerId) {\r\n      console.warn('쿠팡 파트너 ID가 설정되지 않았습니다.');\r\n      return productUrl;\r\n    }\r\n\r\n    const partnerCode = this.partnerId;\r\n    const encodedUrl = encodeURIComponent(productUrl);\r\n    \r\n    return `https://link.coupang.com/a/${partnerCode}?url=${encodedUrl}`;\r\n  }\r\n}\r\n\r\nexport const coupangService = new CoupangPartnerService();\r\nexport type { CoupangProduct, CoupangSearchResponse }; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}