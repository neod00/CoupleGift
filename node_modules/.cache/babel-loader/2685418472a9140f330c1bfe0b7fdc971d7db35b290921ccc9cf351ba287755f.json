{"ast":null,"code":"import{coupangService}from'./coupangService';const API_URL='https://api.openai.com/v1/chat/completions';const API_KEY=process.env.REACT_APP_OPENAI_API_KEY;export const getGiftRecommendations=async formData=>{if(!API_KEY){throw new Error('OpenAI API 키가 설정되지 않았습니다.');}const prompt=`\n당신은 커플 기념일 선물 추천 전문가입니다. 다음 정보를 바탕으로 3-4개의 선물을 추천해주세요.\n\n상대방 정보:\n- 성별: ${formData.gender==='male'?'남성':'여성'}\n- 나이: ${formData.age}세\n- 성격/취향: ${formData.personality}\n- 기념일: ${formData.occasionType}\n- 예산: ${formData.minBudget.toLocaleString()}원 ~ ${formData.maxBudget.toLocaleString()}원\n- 선호 카테고리: ${formData.category||'전체'}\n- 추가 정보: ${formData.additionalInfo||'없음'}\n\n다음 JSON 형식으로 정확히 답변해주세요:\n{\n  \"recommendations\": [\n    {\n      \"id\": \"1\",\n      \"title\": \"선물 이름\",\n      \"description\": \"선물에 대한 간단한 설명 (50자 이내)\",\n      \"price\": \"예상 가격 (예: 59,000원)\",\n      \"category\": \"카테고리\",\n      \"searchKeyword\": \"쿠팡 검색용 키워드 (구체적이고 간단하게)\"\n    }\n  ]\n}\n\n주의사항:\n- 예산 범위 내의 현실적인 가격으로 추천\n- 성별, 나이, 성격을 고려한 맞춤형 추천\n- 기념일 특성에 맞는 의미있는 선물 제안\n- searchKeyword는 쿠팡에서 실제 검색 가능한 단순한 키워드로 작성\n- JSON 형식을 정확히 지켜주세요\n`;try{const response=await fetch(API_URL,{method:'POST',headers:{'Content-Type':'application/json','Authorization':`Bearer ${API_KEY}`},body:JSON.stringify({model:'gpt-4o-mini',messages:[{role:'system',content:'당신은 커플 기념일 선물 추천 전문가입니다. 사용자의 요구사항을 분석하여 최적의 선물을 JSON 형식으로 추천해주세요.'},{role:'user',content:prompt}],max_tokens:1000,temperature:0.7})});if(!response.ok){throw new Error(`API 요청 실패: ${response.status}`);}const data=await response.json();const gptResponse=data.choices[0].message.content;// JSON 파싱\nconst parsedResponse=JSON.parse(gptResponse);// 각 추천 상품에 대해 실제 쿠팡 제품 검색\nconst recommendationsWithRealProducts=await Promise.all(parsedResponse.recommendations.map(async(rec,index)=>{try{// 쿠팡에서 실제 제품 검색\nconst searchResult=await coupangService.searchProducts(rec.searchKeyword,3);if(searchResult.products.length>0){// 첫 번째 검색 결과를 사용\nconst product=searchResult.products[0];return{id:rec.id,title:product.productName,description:rec.description,price:`${product.productPrice.toLocaleString()}원`,imageUrl:product.productImage,coupangUrl:coupangService.generatePartnerLink(product.productUrl),category:product.categoryName,rating:product.rating,reviewCount:product.ratingCount};}else{// 검색 결과가 없으면 기본 정보 사용\nreturn{id:rec.id,title:rec.title,description:rec.description,price:rec.price,imageUrl:`https://via.placeholder.com/300x200?text=${encodeURIComponent(rec.title)}`,coupangUrl:generateCoupangSearchLink(rec.searchKeyword),category:rec.category};}}catch(error){console.error(`제품 검색 오류 (${rec.title}):`,error);// 오류 발생 시 기본 정보 사용\nreturn{id:rec.id,title:rec.title,description:rec.description,price:rec.price,imageUrl:`https://via.placeholder.com/300x200?text=${encodeURIComponent(rec.title)}`,coupangUrl:generateCoupangSearchLink(rec.searchKeyword),category:rec.category};}}));return{recommendations:recommendationsWithRealProducts,success:true};}catch(error){console.error('GPT API 오류:',error);return{recommendations:[],success:false,error:error instanceof Error?error.message:'알 수 없는 오류가 발생했습니다.'};}};// 쿠팡 검색 링크 생성 함수 (백업용)\nconst generateCoupangSearchLink=keyword=>{const partnerCode=process.env.REACT_APP_COUPANG_PARTNER_ID||'AF1234567';const encodedKeyword=encodeURIComponent(keyword);return`https://link.coupang.com/a/${partnerCode}?url=https%3A%2F%2Fwww.coupang.com%2Fnp%2Fsearch%3Fq%3D${encodedKeyword}`;};// 쿠팡 파트너스 링크 생성 함수 (하위 호환성)\nconst generateCoupangPartnerLink=keyword=>{return generateCoupangSearchLink(keyword);};// 더미 데이터 생성 함수 (개발/테스트용)\nexport const getDummyRecommendations=async formData=>{// 실제 개발 시에는 이 함수를 사용하여 API 호출 없이 테스트 가능\nawait new Promise(resolve=>setTimeout(resolve,2000));// 2초 대기\nconst dummyRecommendations=[{id:'1',title:'커플 목걸이 세트',description:'서로의 이름이 새겨진 특별한 커플 목걸이',price:'59,000원',imageUrl:'https://via.placeholder.com/300x200?text=커플목걸이',coupangUrl:generateCoupangPartnerLink('커플 목걸이'),category:'액세서리',rating:4.5,reviewCount:128},{id:'2',title:'프리미엄 향수 선물세트',description:'은은한 향이 매력적인 프리미엄 향수',price:'89,000원',imageUrl:'https://via.placeholder.com/300x200?text=향수',coupangUrl:generateCoupangPartnerLink('향수 선물세트'),category:'뷰티',rating:4.2,reviewCount:89},{id:'3',title:'무선 이어폰',description:'음질이 뛰어난 프리미엄 무선 이어폰',price:'79,000원',imageUrl:'https://via.placeholder.com/300x200?text=무선이어폰',coupangUrl:generateCoupangPartnerLink('무선 이어폰'),category:'IT기기',rating:4.7,reviewCount:256}];return{recommendations:dummyRecommendations,success:true};};","map":{"version":3,"names":["coupangService","API_URL","API_KEY","process","env","REACT_APP_OPENAI_API_KEY","getGiftRecommendations","formData","Error","prompt","gender","age","personality","occasionType","minBudget","toLocaleString","maxBudget","category","additionalInfo","response","fetch","method","headers","body","JSON","stringify","model","messages","role","content","max_tokens","temperature","ok","status","data","json","gptResponse","choices","message","parsedResponse","parse","recommendationsWithRealProducts","Promise","all","recommendations","map","rec","index","searchResult","searchProducts","searchKeyword","products","length","product","id","title","productName","description","price","productPrice","imageUrl","productImage","coupangUrl","generatePartnerLink","productUrl","categoryName","rating","reviewCount","ratingCount","encodeURIComponent","generateCoupangSearchLink","error","console","success","keyword","partnerCode","REACT_APP_COUPANG_PARTNER_ID","encodedKeyword","generateCoupangPartnerLink","getDummyRecommendations","resolve","setTimeout","dummyRecommendations"],"sources":["C:/Users/NT940XHA/OneDrive/Business/ai automation/CoupleGift/src/services/gptService.ts"],"sourcesContent":["import { GiftFormData, GiftRecommendation, GPTResponse } from '../types/gift';\r\nimport { coupangService } from './coupangService';\r\n\r\nconst API_URL = 'https://api.openai.com/v1/chat/completions';\r\nconst API_KEY = process.env.REACT_APP_OPENAI_API_KEY;\r\n\r\nexport const getGiftRecommendations = async (formData: GiftFormData): Promise<GPTResponse> => {\r\n  if (!API_KEY) {\r\n    throw new Error('OpenAI API 키가 설정되지 않았습니다.');\r\n  }\r\n\r\n  const prompt = `\r\n당신은 커플 기념일 선물 추천 전문가입니다. 다음 정보를 바탕으로 3-4개의 선물을 추천해주세요.\r\n\r\n상대방 정보:\r\n- 성별: ${formData.gender === 'male' ? '남성' : '여성'}\r\n- 나이: ${formData.age}세\r\n- 성격/취향: ${formData.personality}\r\n- 기념일: ${formData.occasionType}\r\n- 예산: ${formData.minBudget.toLocaleString()}원 ~ ${formData.maxBudget.toLocaleString()}원\r\n- 선호 카테고리: ${formData.category || '전체'}\r\n- 추가 정보: ${formData.additionalInfo || '없음'}\r\n\r\n다음 JSON 형식으로 정확히 답변해주세요:\r\n{\r\n  \"recommendations\": [\r\n    {\r\n      \"id\": \"1\",\r\n      \"title\": \"선물 이름\",\r\n      \"description\": \"선물에 대한 간단한 설명 (50자 이내)\",\r\n      \"price\": \"예상 가격 (예: 59,000원)\",\r\n      \"category\": \"카테고리\",\r\n      \"searchKeyword\": \"쿠팡 검색용 키워드 (구체적이고 간단하게)\"\r\n    }\r\n  ]\r\n}\r\n\r\n주의사항:\r\n- 예산 범위 내의 현실적인 가격으로 추천\r\n- 성별, 나이, 성격을 고려한 맞춤형 추천\r\n- 기념일 특성에 맞는 의미있는 선물 제안\r\n- searchKeyword는 쿠팡에서 실제 검색 가능한 단순한 키워드로 작성\r\n- JSON 형식을 정확히 지켜주세요\r\n`;\r\n\r\n  try {\r\n    const response = await fetch(API_URL, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${API_KEY}`\r\n      },\r\n      body: JSON.stringify({\r\n        model: 'gpt-4o-mini',\r\n        messages: [\r\n          {\r\n            role: 'system',\r\n            content: '당신은 커플 기념일 선물 추천 전문가입니다. 사용자의 요구사항을 분석하여 최적의 선물을 JSON 형식으로 추천해주세요.'\r\n          },\r\n          {\r\n            role: 'user',\r\n            content: prompt\r\n          }\r\n        ],\r\n        max_tokens: 1000,\r\n        temperature: 0.7\r\n      })\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`API 요청 실패: ${response.status}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    const gptResponse = data.choices[0].message.content;\r\n    \r\n    // JSON 파싱\r\n    const parsedResponse = JSON.parse(gptResponse);\r\n    \r\n    // 각 추천 상품에 대해 실제 쿠팡 제품 검색\r\n    const recommendationsWithRealProducts = await Promise.all(\r\n      parsedResponse.recommendations.map(async (rec: any, index: number) => {\r\n        try {\r\n          // 쿠팡에서 실제 제품 검색\r\n          const searchResult = await coupangService.searchProducts(rec.searchKeyword, 3);\r\n          \r\n          if (searchResult.products.length > 0) {\r\n            // 첫 번째 검색 결과를 사용\r\n            const product = searchResult.products[0];\r\n            \r\n            return {\r\n              id: rec.id,\r\n              title: product.productName,\r\n              description: rec.description,\r\n              price: `${product.productPrice.toLocaleString()}원`,\r\n              imageUrl: product.productImage,\r\n              coupangUrl: coupangService.generatePartnerLink(product.productUrl),\r\n              category: product.categoryName,\r\n              rating: product.rating,\r\n              reviewCount: product.ratingCount\r\n            };\r\n          } else {\r\n            // 검색 결과가 없으면 기본 정보 사용\r\n            return {\r\n              id: rec.id,\r\n              title: rec.title,\r\n              description: rec.description,\r\n              price: rec.price,\r\n              imageUrl: `https://via.placeholder.com/300x200?text=${encodeURIComponent(rec.title)}`,\r\n              coupangUrl: generateCoupangSearchLink(rec.searchKeyword),\r\n              category: rec.category\r\n            };\r\n          }\r\n        } catch (error) {\r\n          console.error(`제품 검색 오류 (${rec.title}):`, error);\r\n          // 오류 발생 시 기본 정보 사용\r\n          return {\r\n            id: rec.id,\r\n            title: rec.title,\r\n            description: rec.description,\r\n            price: rec.price,\r\n            imageUrl: `https://via.placeholder.com/300x200?text=${encodeURIComponent(rec.title)}`,\r\n            coupangUrl: generateCoupangSearchLink(rec.searchKeyword),\r\n            category: rec.category\r\n          };\r\n        }\r\n      })\r\n    );\r\n\r\n    return {\r\n      recommendations: recommendationsWithRealProducts,\r\n      success: true\r\n    };\r\n  } catch (error) {\r\n    console.error('GPT API 오류:', error);\r\n    return {\r\n      recommendations: [],\r\n      success: false,\r\n      error: error instanceof Error ? error.message : '알 수 없는 오류가 발생했습니다.'\r\n    };\r\n  }\r\n};\r\n\r\n// 쿠팡 검색 링크 생성 함수 (백업용)\r\nconst generateCoupangSearchLink = (keyword: string): string => {\r\n  const partnerCode = process.env.REACT_APP_COUPANG_PARTNER_ID || 'AF1234567';\r\n  const encodedKeyword = encodeURIComponent(keyword);\r\n  \r\n  return `https://link.coupang.com/a/${partnerCode}?url=https%3A%2F%2Fwww.coupang.com%2Fnp%2Fsearch%3Fq%3D${encodedKeyword}`;\r\n};\r\n\r\n// 쿠팡 파트너스 링크 생성 함수 (하위 호환성)\r\nconst generateCoupangPartnerLink = (keyword: string): string => {\r\n  return generateCoupangSearchLink(keyword);\r\n};\r\n\r\n// 더미 데이터 생성 함수 (개발/테스트용)\r\nexport const getDummyRecommendations = async (formData: GiftFormData): Promise<GPTResponse> => {\r\n  // 실제 개발 시에는 이 함수를 사용하여 API 호출 없이 테스트 가능\r\n  await new Promise(resolve => setTimeout(resolve, 2000)); // 2초 대기\r\n\r\n  const dummyRecommendations: GiftRecommendation[] = [\r\n    {\r\n      id: '1',\r\n      title: '커플 목걸이 세트',\r\n      description: '서로의 이름이 새겨진 특별한 커플 목걸이',\r\n      price: '59,000원',\r\n      imageUrl: 'https://via.placeholder.com/300x200?text=커플목걸이',\r\n      coupangUrl: generateCoupangPartnerLink('커플 목걸이'),\r\n      category: '액세서리',\r\n      rating: 4.5,\r\n      reviewCount: 128\r\n    },\r\n    {\r\n      id: '2',\r\n      title: '프리미엄 향수 선물세트',\r\n      description: '은은한 향이 매력적인 프리미엄 향수',\r\n      price: '89,000원',\r\n      imageUrl: 'https://via.placeholder.com/300x200?text=향수',\r\n      coupangUrl: generateCoupangPartnerLink('향수 선물세트'),\r\n      category: '뷰티',\r\n      rating: 4.2,\r\n      reviewCount: 89\r\n    },\r\n    {\r\n      id: '3',\r\n      title: '무선 이어폰',\r\n      description: '음질이 뛰어난 프리미엄 무선 이어폰',\r\n      price: '79,000원',\r\n      imageUrl: 'https://via.placeholder.com/300x200?text=무선이어폰',\r\n      coupangUrl: generateCoupangPartnerLink('무선 이어폰'),\r\n      category: 'IT기기',\r\n      rating: 4.7,\r\n      reviewCount: 256\r\n    }\r\n  ];\r\n\r\n  return {\r\n    recommendations: dummyRecommendations,\r\n    success: true\r\n  };\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}