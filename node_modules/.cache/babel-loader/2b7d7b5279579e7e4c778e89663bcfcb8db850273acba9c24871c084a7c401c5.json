{"ast":null,"code":"// API 호출을 Netlify Function으로 변경\nconst API_FUNCTION_URL = '/.netlify/functions/get-recommendations';\nexport const getGiftRecommendations = async formData => {\n  console.log('🚀 Netlify Function 호출 시작:', {\n    url: API_FUNCTION_URL,\n    environment: process.env.NODE_ENV\n  });\n  try {\n    const response = await fetch(API_FUNCTION_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    });\n    console.log('📡 Netlify Function 응답 상태:', {\n      status: response.status,\n      statusText: response.statusText,\n      ok: response.ok\n    });\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => response.text());\n      console.error('❌ Netlify Function 오류:', errorData);\n      throw new Error('서버에서 추천을 받아오는 중 오류가 발생했습니다.');\n    }\n    const parsedResponse = await response.json().catch(async error => {\n      console.error('❌ 응답 JSON 파싱 오류:', error);\n      const textResponse = await response.text();\n      console.error('원본 응답:', textResponse);\n      throw new Error('서버 응답을 파싱할 수 없습니다.');\n    });\n    console.log('✅ 서버로부터 성공적인 응답 받음:', parsedResponse);\n\n    // 각 추천 상품에 대해 쿠팡 검색 링크 및 이미지 생성\n    const recommendationsWithLinks = parsedResponse.recommendations.map((rec, index) => {\n      const searchKeyword = rec.searchKeyword || rec.title;\n      const coupangUrl = generateCoupangSearchLink(searchKeyword);\n      const imageUrl = getStableImageUrl(rec.category);\n      console.log(`🔍 추천 ${index + 1}:`, {\n        title: rec.title,\n        searchKeyword: searchKeyword,\n        coupangUrl: coupangUrl,\n        imageUrl: imageUrl\n      });\n      return {\n        id: rec.id,\n        title: rec.title,\n        description: rec.description,\n        price: rec.price,\n        imageUrl: imageUrl,\n        coupangUrl: coupangUrl,\n        category: rec.category,\n        rating: 4.5,\n        // 기본 평점\n        reviewCount: Math.floor(Math.random() * 500) + 50 // 랜덤 리뷰 수\n      };\n    });\n    return {\n      recommendations: recommendationsWithLinks,\n      success: true\n    };\n  } catch (error) {\n    console.error('💥 전체 API 호출 오류:', error);\n\n    // 오류 발생 시 사용자에게 보여줄 메시지와 함께 실패 응답 반환\n    return {\n      recommendations: [],\n      success: false,\n      error: error instanceof Error ? error.message : '알 수 없는 오류가 발생했습니다.'\n    };\n  }\n};\n\n// 더 안정적인 이미지 URL 생성 함수\nconst getStableImageUrl = category => {\n  const categoryImages = {\n    '액세서리': 'https://images.unsplash.com/photo-1515562141207-7a88fb7ce338?w=400&h=300&fit=crop&auto=format',\n    '뷰티': 'https://images.unsplash.com/photo-1596462502278-27bfdc403348?w=400&h=300&fit=crop&auto=format',\n    '향수': 'https://images.unsplash.com/photo-1541643600914-78b084683601?w=400&h=300&fit=crop&auto=format',\n    'IT기기': 'https://images.unsplash.com/photo-1505740420928-5e560c06d30e?w=400&h=300&fit=crop&auto=format',\n    '패션': 'https://images.unsplash.com/photo-1445205170230-053b83016050?w=400&h=300&fit=crop&auto=format',\n    '생활용품': 'https://images.unsplash.com/photo-1586880244386-8b3e34734ed8?w=400&h=300&fit=crop&auto=format',\n    '꽃': 'https://images.unsplash.com/photo-1490750967868-88aa4486c946?w=400&h=300&fit=crop&auto=format',\n    '음식': 'https://images.unsplash.com/photo-1567620905732-2d1ec7ab7445?w=400&h=300&fit=crop&auto=format',\n    '기본': 'https://images.unsplash.com/photo-1513475382585-d06e58bcb0e0?w=400&h=300&fit=crop&auto=format'\n  };\n  return categoryImages[category] || categoryImages['기본'];\n};\n\n// 쿠팡 파트너스 검색 링크 생성 함수\nconst generateCoupangSearchLink = keyword => {\n  // 이제 이 함수는 서버가 아닌 클라이언트에서만 실행되므로, \n  // COUPANG_PARTNER_ID도 REACT_APP_ 접두사를 사용해야 합니다.\n  const partnerId = process.env.REACT_APP_COUPANG_PARTNER_ID || '';\n  const encodedKeyword = encodeURIComponent(keyword);\n  if (partnerId) {\n    return `https://link.coupang.com/a/${partnerId}?url=https%3A%2F%2Fwww.coupang.com%2Fnp%2Fsearch%3Fq%3D${encodedKeyword}`;\n  } else {\n    return `https://www.coupang.com/np/search?q=${encodedKeyword}`;\n  }\n};\n\n// 더미 데이터 생성 함수 (개발/테스트 및 폴백용)\nexport const getDummyRecommendations = async formData => {\n  console.log('🎭 더미 데이터 생성 중...');\n  await new Promise(resolve => setTimeout(resolve, 1500));\n  const dummyRecommendations = [{\n    id: '1',\n    title: '커플 목걸이 세트 (더미)',\n    description: '이 데이터는 API 호출 실패 시 표시되는 예시입니다.',\n    price: '59,000원',\n    imageUrl: getStableImageUrl('액세서리'),\n    coupangUrl: generateCoupangSearchLink('커플 목걸이'),\n    category: '액세서리',\n    rating: 4.5,\n    reviewCount: 128\n  }, {\n    id: '2',\n    title: '프리미엄 향수 (더미)',\n    description: '서버에 API 키를 올바르게 설정했는지 확인해주세요.',\n    price: '89,000원',\n    imageUrl: getStableImageUrl('향수'),\n    coupangUrl: generateCoupangSearchLink('향수 선물세트'),\n    category: '뷰티',\n    rating: 4.2,\n    reviewCount: 89\n  }];\n  console.log('✅ 더미 데이터 생성 완료');\n  return {\n    recommendations: dummyRecommendations,\n    success: true\n  };\n};","map":{"version":3,"names":["API_FUNCTION_URL","getGiftRecommendations","formData","console","log","url","environment","process","env","NODE_ENV","response","fetch","method","headers","body","JSON","stringify","status","statusText","ok","errorData","json","catch","text","error","Error","parsedResponse","textResponse","recommendationsWithLinks","recommendations","map","rec","index","searchKeyword","title","coupangUrl","generateCoupangSearchLink","imageUrl","getStableImageUrl","category","id","description","price","rating","reviewCount","Math","floor","random","success","message","categoryImages","keyword","partnerId","REACT_APP_COUPANG_PARTNER_ID","encodedKeyword","encodeURIComponent","getDummyRecommendations","Promise","resolve","setTimeout","dummyRecommendations"],"sources":["C:/Users/NT940XHA/OneDrive/Business/ai automation/CoupleGift/src/services/gptService.ts"],"sourcesContent":["import { GiftFormData, GiftRecommendation, GPTResponse } from '../types/gift';\r\n\r\n// API 호출을 Netlify Function으로 변경\r\nconst API_FUNCTION_URL = '/.netlify/functions/get-recommendations';\r\n\r\nexport const getGiftRecommendations = async (formData: GiftFormData): Promise<GPTResponse> => {\r\n  console.log('🚀 Netlify Function 호출 시작:', {\r\n    url: API_FUNCTION_URL,\r\n    environment: process.env.NODE_ENV\r\n  });\r\n\r\n  try {\r\n    const response = await fetch(API_FUNCTION_URL, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(formData)\r\n    });\r\n\r\n    console.log('📡 Netlify Function 응답 상태:', {\r\n      status: response.status,\r\n      statusText: response.statusText,\r\n      ok: response.ok\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json().catch(() => response.text());\r\n      console.error('❌ Netlify Function 오류:', errorData);\r\n      throw new Error('서버에서 추천을 받아오는 중 오류가 발생했습니다.');\r\n    }\r\n\r\n    const parsedResponse = await response.json().catch(async (error) => {\r\n      console.error('❌ 응답 JSON 파싱 오류:', error);\r\n      const textResponse = await response.text();\r\n      console.error('원본 응답:', textResponse);\r\n      throw new Error('서버 응답을 파싱할 수 없습니다.');\r\n    });\r\n    \r\n    console.log('✅ 서버로부터 성공적인 응답 받음:', parsedResponse);\r\n    \r\n    // 각 추천 상품에 대해 쿠팡 검색 링크 및 이미지 생성\r\n    const recommendationsWithLinks = parsedResponse.recommendations.map((rec: any, index: number) => {\r\n      const searchKeyword = rec.searchKeyword || rec.title;\r\n      const coupangUrl = generateCoupangSearchLink(searchKeyword);\r\n      const imageUrl = getStableImageUrl(rec.category);\r\n      \r\n      console.log(`🔍 추천 ${index + 1}:`, {\r\n        title: rec.title,\r\n        searchKeyword: searchKeyword,\r\n        coupangUrl: coupangUrl,\r\n        imageUrl: imageUrl\r\n      });\r\n      \r\n      return {\r\n        id: rec.id,\r\n        title: rec.title,\r\n        description: rec.description,\r\n        price: rec.price,\r\n        imageUrl: imageUrl,\r\n        coupangUrl: coupangUrl,\r\n        category: rec.category,\r\n        rating: 4.5, // 기본 평점\r\n        reviewCount: Math.floor(Math.random() * 500) + 50 // 랜덤 리뷰 수\r\n      };\r\n    });\r\n\r\n    return {\r\n      recommendations: recommendationsWithLinks,\r\n      success: true\r\n    };\r\n  } catch (error) {\r\n    console.error('💥 전체 API 호출 오류:', error);\r\n    \r\n    // 오류 발생 시 사용자에게 보여줄 메시지와 함께 실패 응답 반환\r\n    return {\r\n      recommendations: [],\r\n      success: false,\r\n      error: error instanceof Error ? error.message : '알 수 없는 오류가 발생했습니다.'\r\n    };\r\n  }\r\n};\r\n\r\n// 더 안정적인 이미지 URL 생성 함수\r\nconst getStableImageUrl = (category: string): string => {\r\n  const categoryImages: { [key: string]: string } = {\r\n    '액세서리': 'https://images.unsplash.com/photo-1515562141207-7a88fb7ce338?w=400&h=300&fit=crop&auto=format',\r\n    '뷰티': 'https://images.unsplash.com/photo-1596462502278-27bfdc403348?w=400&h=300&fit=crop&auto=format',\r\n    '향수': 'https://images.unsplash.com/photo-1541643600914-78b084683601?w=400&h=300&fit=crop&auto=format',\r\n    'IT기기': 'https://images.unsplash.com/photo-1505740420928-5e560c06d30e?w=400&h=300&fit=crop&auto=format',\r\n    '패션': 'https://images.unsplash.com/photo-1445205170230-053b83016050?w=400&h=300&fit=crop&auto=format',\r\n    '생활용품': 'https://images.unsplash.com/photo-1586880244386-8b3e34734ed8?w=400&h=300&fit=crop&auto=format',\r\n    '꽃': 'https://images.unsplash.com/photo-1490750967868-88aa4486c946?w=400&h=300&fit=crop&auto=format',\r\n    '음식': 'https://images.unsplash.com/photo-1567620905732-2d1ec7ab7445?w=400&h=300&fit=crop&auto=format',\r\n    '기본': 'https://images.unsplash.com/photo-1513475382585-d06e58bcb0e0?w=400&h=300&fit=crop&auto=format'\r\n  };\r\n  \r\n  return categoryImages[category] || categoryImages['기본'];\r\n};\r\n\r\n// 쿠팡 파트너스 검색 링크 생성 함수\r\nconst generateCoupangSearchLink = (keyword: string): string => {\r\n  // 이제 이 함수는 서버가 아닌 클라이언트에서만 실행되므로, \r\n  // COUPANG_PARTNER_ID도 REACT_APP_ 접두사를 사용해야 합니다.\r\n  const partnerId = process.env.REACT_APP_COUPANG_PARTNER_ID || '';\r\n  const encodedKeyword = encodeURIComponent(keyword);\r\n  \r\n  if (partnerId) {\r\n    return `https://link.coupang.com/a/${partnerId}?url=https%3A%2F%2Fwww.coupang.com%2Fnp%2Fsearch%3Fq%3D${encodedKeyword}`;\r\n  } else {\r\n    return `https://www.coupang.com/np/search?q=${encodedKeyword}`;\r\n  }\r\n};\r\n\r\n// 더미 데이터 생성 함수 (개발/테스트 및 폴백용)\r\nexport const getDummyRecommendations = async (formData: GiftFormData): Promise<GPTResponse> => {\r\n  console.log('🎭 더미 데이터 생성 중...');\r\n  await new Promise(resolve => setTimeout(resolve, 1500)); \r\n\r\n  const dummyRecommendations: GiftRecommendation[] = [\r\n    {\r\n      id: '1',\r\n      title: '커플 목걸이 세트 (더미)',\r\n      description: '이 데이터는 API 호출 실패 시 표시되는 예시입니다.',\r\n      price: '59,000원',\r\n      imageUrl: getStableImageUrl('액세서리'),\r\n      coupangUrl: generateCoupangSearchLink('커플 목걸이'),\r\n      category: '액세서리',\r\n      rating: 4.5,\r\n      reviewCount: 128\r\n    },\r\n    {\r\n      id: '2',\r\n      title: '프리미엄 향수 (더미)',\r\n      description: '서버에 API 키를 올바르게 설정했는지 확인해주세요.',\r\n      price: '89,000원',\r\n      imageUrl: getStableImageUrl('향수'),\r\n      coupangUrl: generateCoupangSearchLink('향수 선물세트'),\r\n      category: '뷰티',\r\n      rating: 4.2,\r\n      reviewCount: 89\r\n    },\r\n  ];\r\n\r\n  console.log('✅ 더미 데이터 생성 완료');\r\n\r\n  return {\r\n    recommendations: dummyRecommendations,\r\n    success: true\r\n  };\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}